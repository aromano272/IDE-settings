"" Source your .vimrc
"source ~/.vimrc

" Plugins
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'

set surround repeat

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)


" Find more examples here: https://jb.gg/share-ideavimrc
set relativenumber
set number

set clipboard+=unnamed
inoremap jk <ESC>
let mapleader = " "

set matchpairs+=<:>

nmap J <Action>(EditorJoinLines)
vmap J <Action>(EditorJoinLines)

" nnoremap d "_d
" nnoremap D "_D
" vnoremap d "_d

nnoremap <C-u> <C-u>zz
nnoremap <C-d> <C-d>zz

nnoremap n nzz
nnoremap N Nzz

map gi <Action>(GotoImplementation)
map gf <Action>(SelectInProjectView)
map gh <Action>(ShowErrorDescription)
nmap s <Plug>(easymotion-s)

map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)

" Apparently VIM undo/redo behaves quite differently then what Intellij undo/redo
map u <Action>($Undo)
map <C-r> <Action>($Redo)

map <Leader> <Plug>(easymotion-prefix)

set ignorecase smartcase
set ideamarks
set highlightedyank

set showmode
set quickscope
set easymotion